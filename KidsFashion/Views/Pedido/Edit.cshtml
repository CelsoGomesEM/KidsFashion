@model KidsFashion.Models.PedidoViewModel

@{
    ViewData["Title"] = "Editar Pedido";
}

<div class="container">
    <h1 class="display-4 text-center">Editar Pedido</h1>

    <br />

    @using (Html.BeginForm("SubmitEdit", "Pedido", FormMethod.Post, new { id = "formEditPedido" }))
    {
        @Html.HiddenFor(model => model.Id)
        @Html.Hidden("ActionType", "", new { id = "ActionType" }) <!-- Campo oculto para identificar a ação -->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Cliente e DataPedido -->
        <div class="form-group row">
            <div class="col-md-8 mb-4">
                <label for="Cliente_Id" class="form-label">@Html.DisplayNameFor(model => model.Cliente)</label>
                @Html.DropDownListFor(
                         model => model.Cliente_Id,
                         Model.ClienteOptions,
                         "Selecione um Cliente",
                         new { @class = "form-control", @disabled = "disabled" }) <!-- Campo desabilitado -->
                @Html.ValidationMessageFor(model => model.Cliente_Id, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-4">
                <label for="DataPedido" class="form-label">@Html.DisplayNameFor(model => model.DataPedido)</label>
                @Html.TextBox("DataPedido", Model.DataPedido.ToString("yyyy-MM-dd"), new { @class = "form-control", @type = "date", @required = "required", id = "DataPedido" })
                @Html.ValidationMessageFor(model => model.DataPedido, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Produto e Quantidade -->
        <div class="form-group row">
            <div class="col-md-5 mb-4">
                <label for="Produto_Id" class="form-label">@Html.DisplayNameFor(model => model.Produto)</label>
                @Html.DropDownListFor(model => model.Produto_Id, Model.ProdutoOptions, "Selecione um Produto", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Produto_Id, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3 mb-4">
                <label for="Quantidade" class="form-label">@Html.DisplayNameFor(model => model.Quantidade)</label>
                @Html.TextBoxFor(model => model.Quantidade, new { @class = "form-control", id = "Quantidade" })
                @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 d-flex align-items-center justify-content-start" style="padding-top: 10px;">
                <button type="submit" class="btn btn-success" onclick="setActionType('add')">Adicionar Produto</button>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Produto</th>
                    <th>Quantidade</th>
                    <th>Remover</th> <!-- Nova coluna para ações -->
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PedidoProdutos)
                {
                    <tr style="vertical-align: middle;">
                        <td>@item.Produto.Nome</td>
                        <td>@item.Quantidade</td>
                        <td>
                            <!-- Botão para remover -->
                            <button type="submit" class="btn btn-danger" onclick="setActionType('remove'); setRemoveId(@item.Produto_Id)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z" />
                                    <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Botões de Ação -->
        <div class="row" style="margin-top: 10px;">
            <div class="col d-flex justify-content-end">
                <a href="@Url.Action("Index", "Pedido")">
                    <button type="button" class="btn btn-secondary">Voltar</button>
                </a>
                <button type="submit" class="btn btn-success" style="margin-left: 15px;" onclick="setActionType('save')">Salvar</button>
            </div>
        </div>

    }
</div>

<script>

    function setActionType(action) {
        document.getElementById('ActionType').value = action;
    }

    function setRemoveId(produtoId) {
        // Define o ID do produto a ser removido
        document.getElementById('Produto_Id').value = produtoId;
    }

</script>
